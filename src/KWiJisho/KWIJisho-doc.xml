<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KWiJisho</name>
    </assembly>
    <members>
        <member name="T:KWiJisho.Modules.APIs.HttpService">
            <summary>
            A simple HTTP service for making GET requests and retrieving the response content.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.APIs.HttpService.GetAsync(System.Net.Http.HttpClient,System.String)">
            <summary>
            Sends an asynchronous GET request to the specified URI and returns the response content as a string.
            </summary>
            <param name="httpClient">The HttpClient instance to use for the request.</param>
            <param name="strRequest">The URI of the resource to request.</param>
            <returns>A Task representing the asynchronous operation. The result contains the response content as a string.</returns>
        </member>
        <member name="T:KWiJisho.Modules.APIs.NasaApi">
            <summary>
            This class provides methods for interacting with the NASA's API using
            HTTP requests.
            API Documentation: <a href="https://api.nasa.gov/"/>
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.APIs.NasaApi.HttpClient">
            <summary>
            HttpClient responsible for making api requests.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.APIs.NasaApi.Apod">
            <summary>
            This class provides methods for interacting with the APOD (Astronomy Picture of
            the Day) API using HTTP requests.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.APIs.NasaApi.Apod.GetAsync">
            <summary>
            Retrieves the Astronomy Picture of the Day (APOD) through a request to NASA's API.
            </summary>
            <returns>An asynchronous <see cref="T:System.Threading.Tasks.Task"/> that represents the operation. The task result contains an <see cref="T:KWiJisho.Modules.APIs.NasaApi.Apod.ApodResponseJson"/> object.</returns>
        </member>
        <member name="M:KWiJisho.Modules.APIs.NasaApi.Apod.GetUsingNasaApiAsync(System.String)">
            <summary>
            Makes a generic request to NASA's API with the specified endpoint.
            </summary>
            <param name="request">The endpoint for the API request.</param>
            <returns>An asynchronous task that represents the operation. The task result contains the API response as a string.</returns>
        </member>
        <member name="T:KWiJisho.Modules.APIs.NasaApi.Apod.ApodResponseJson">
            <summary>
            Represents the APOD Json response for a NASA's API HTTP request.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.APIs.NasaApi.Apod.ApodResponseJson.Title">
            <summary>
            Title of the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.APIs.NasaApi.Apod.ApodResponseJson.Explanation">
            <summary>
            Explanation of the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.APIs.NasaApi.Apod.ApodResponseJson.Date">
            <summary>
            Date of the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.APIs.NasaApi.Apod.ApodResponseJson.Url">
            <summary>
            Image URL of the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.APIs.NasaApi.Apod.ApodResponseJson.Copyright">
            <summary>
            Copyright of the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.APIs.OpenAiApi">
            <summary>
            This class provides methods for interacting with the OpenAI GPT-3.5 model
            using the OpenAI-API-dotnet library.
            API Documentation: <a href="https://github.com/OkGoDoIt/OpenAI-API-dotnet"/>
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.APIs.OpenAiApi.GetPromptKWiJishoStyleAsync(System.String)">
            <summary>
            Asynchronous method to generate a prompt in the style of "KWiJisho."
            </summary>
            <param name="input">The user input text.</param>
            <returns>A Task representing the asynchronous operation, yielding the generated prompt.</returns>
        </member>
        <member name="M:KWiJisho.Modules.APIs.OpenAiApi.GetPromptSummarizeTextAsync(System.String)">
            <summary>
            Asynchronous method to generate a prompt for summarizing text.
            </summary>
            <param name="input">The text to be summarized.</param>
            <returns>A Task representing the asynchronous operation, yielding the generated prompt.</returns>
        </member>
        <member name="M:KWiJisho.Modules.APIs.OpenAiApi.GetPromptTranslateToPortugueseAsync(System.String)">
            <summary>
            Asynchronous method to generate a prompt for translating text to Brazilian Portuguese.
            </summary>
            <param name="input">The text to be translated.</param>
            <returns>A Task representing the asynchronous operation, yielding the generated prompt.</returns>
        </member>
        <member name="M:KWiJisho.Modules.APIs.OpenAiApi.GetPromptAsync(System.String,System.String)">
            <summary>
            Asynchronous method to generate a prompt for the OpenAI GPT-3.5 model.
            </summary>
            <param name="userInput">The user input text.</param>
            <param name="promptStyle">The style of the prompt to be added.</param>
            <returns>A Task representing the asynchronous operation, yielding the generated prompt.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Bot">
            <summary>
            The main entry point of the application.
            </summary>
            <summary>
            The main entry point of the application.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Bot.DiscordClient">
            <summary>
            Gets or sets the Discord client instance used by the bot.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Bot.PrefixCommands">
            <summary>
            Gets or sets the <see cref="T:DSharpPlus.CommandsNext.CommandsNextExtension"/> instance for handling bot prefix commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Bot.SlashCommands">
            <summary>
            Gets or sets the <see cref="T:DSharpPlus.SlashCommands.SlashCommandsExtension"/> instance for handling bot slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Bot.RunAsync">
            <summary>
            Asynchronously runs the bot connecting it to the Discord and initializing
            the necessary configurations.
            </summary>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Bot.RegisterPrefixCommands">
            <summary>
            Register all the Discord bot prefix commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Bot.RegisterSlashCommands">
            <summary>
            Register all the Discord bot slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Bot.RegisterBotEvents">
            <summary>
            Register all the Discord bot events.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KWiJisho.Modules.Bot.RegisterPrefixCommandsPermissions">
            <summary>
            Register all the Discord bot prefix commands permissions.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Bot.RegisterSlashCommandsPermissions">
            <summary>
            Register all the Discord bot slash commands permissions.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Basic">
            <summary>
            Provides methods for "prefix" and "slash" basic commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Basic.SendRandomAnimatedEmoji(DSharpPlus.Entities.DiscordChannel)">
            <summary>
            Sends a random animated emoji from <see cref="F:KWiJisho.Modules.Utils.DiscordEmojis.AnimatedEmojis"/>.
            </summary>
            <param name="discordChannel">The discord channel where the command will be executed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Basic.SendRandomAnimatedMemeEmoji(DSharpPlus.Entities.DiscordChannel)">
            <summary>
            Sends a random animated emoji from <see cref="F:KWiJisho.Modules.Utils.DiscordEmojis.AnimatedMemeEmojis"/>.
            </summary>
            <param name="discordChannel">The discord channel where the command will be executed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Basic.SendRandomAnimatedPartyEmoji(DSharpPlus.Entities.DiscordChannel)">
            <summary>
            Sends a random animated emoji from <see cref="F:KWiJisho.Modules.Utils.DiscordEmojis.AnimatedPartyEmojis"/>.
            </summary>
            <param name="discordChannel">The discord channel where the command will be executed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Birthday">
            <summary>
            Provides methods for "prefix" and "slash" birthday commands.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Info">
            <summary>
            Provides methods for "prefix" and "slash" informational and helpful commands.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.KwiGpt">
            <summary>
            Provides methods for "prefix" and "slash" KWiGPT commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.KwiGpt.ChatGptPromptAsync(DSharpPlus.Entities.DiscordChannel,System.String[])">
            <summary>
            Represents the command to get the chat gpt prompt in KWiJisho style.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Notice">
            <summary>
            Provides methods for "prefix" and "slash" notice commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Notice.Yellow">
            <summary>
            Represents the Yellow color.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager">
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.CommandGroups">
            <summary>
            Gets or sets the list of command groups.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.Astronomy">
            <summary>
            Gets the command group for Astronomy commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.ChatGpt">
            <summary>
            Gets the command group for ChatGPT commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.Info">
            <summary>
            Gets the command group for Information and Help commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.Manage">
            <summary>
            Gets the command group for Theme commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.Birthday">
            <summary>
            Gets the command group for Birthday commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.Basic">
            <summary>
            Gets the command group for Basic commands.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBasic">
            <summary>
            Represents a set of basic prefix commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBasic.emoji">
            <summary>
            Represents the command to send a random animated emoji.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBasic.emojim">
            <summary>
            Represents the command to send a random animated meme emoji.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBasic.emojip">
            <summary>
            Represents the command to send a random animated party emoji.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBasic.SendRandomAnimatedEmoji(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix send random animated emoji method called when sending a random animated emoji.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBasic.SendRandomMemeEmoji(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix send random animated meme emoji method called when sending a random meme animated emoji.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBasic.SendRandomPartyEmoji(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix send random animated party emoji method called when sending a random party animated emoji.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBirthday">
            <summary>
            Represents a set of birthday prefix commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBirthday.nextBirthday">
            <summary>
            Represents the command to show the next person to have a birthday.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBirthday.listBirthday">
            <summary>
            Represents the command to list people will have birthday.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBirthday.GetNextBirthdayAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix get next birthday method called when requesting to show the next person to have a birthday.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixBirthday.GetListBirthdayAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix get birthday list called when requesting to show the list of people to have a birthday.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixInfo">
            <summary>
            Represents a set of info prefix commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixInfo.furtherHelpMessage">
            <summary>
            Constant string that holds the further help message.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixInfo.help">
            <summary>
            Represents the command to show help about the Discord bot commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixInfo.info">
            <summary>
            Represents the command to show information about the bot and the bot owner.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixInfo.GetHelpAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix help method called when user asks for the prefix help command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixInfo.GetInfoAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix info method called when user asks for the prefix info command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixKwiGpt">
            <summary>
            Represents a set of KWiGpt prefix commands. Interaction commands with ChatGpt
            in KWiJisho bot style.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixKwiGpt.k">
            <summary>
            Represents the command to get the chat gpt prompt in KWiJisho style.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixKwiGpt.GetChatGptPromptAsync(DSharpPlus.CommandsNext.CommandContext,System.String[])">
            <summary>
            Represent the asynchronous prefix get chat gpt prompt async method called when user uses the
            command to interact with the bot with ChatGpt in KWiJisho style.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <param name="inputs">The user input for getting the chat prompt</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixNasa">
            <summary>
            Represents a set of prefix NASA commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixNasa.apod">
            <summary>
            Represent the command to get the APOD at its current default state.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixNasa.apodResume">
            <summary>
            Represent the command to get the APOD resumed and translated to portuguese.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixNasa.ApodAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix APOD method callend when user asks for the APOD command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixNasa.ApodResumeAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix APOD resume method callend when user asks for the APOD resume command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
            <returns></returns>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixNotice">
            <summary>
            Represents a set of prefix channel notice commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixNotice.sendNews">
            <summary>
            Represents the prefix command method to send news at the news channel.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme">
            <summary>
            Represents a set of prefix commands to change theme in a Discord server.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.EmojiTheme">
            <summary>
            Represents seasonal themes that you can set to the Discord server.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina">
            <summary>
            Represents a set of prefix commands to change theme designed specifically for Tramontina Discord server.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.TramontinaChannels">
            <summary>
            Channels from tramontina server that can receive theme changing.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.themeReset">
            <summary>
            Resets the Tramontina server emojis.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.themeChristmas">
            <summary>
            Sets the Tramontina server to Christmas Theme.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.themeEaster">
            <summary>
            Sets the Tramontina server to Easter Theme.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.themeHalloween">
            <summary>
            Sets the Tramontina server to Halloween Theme.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.SetThemeAsync(DSharpPlus.CommandsNext.CommandContext,KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.EmojiTheme,System.String,System.String,System.String)">
            <summary>
            Sets the Tramontina server to a Theme according with parameterization.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.TramontinaChannel">
            <summary>
            Initializes a new instance of <see cref="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.TramontinaChannel"/> class with the specified id, the default channel
            text title and emoji theme.
            </summary>
            <param name="id">The Id from the Discord channel.</param>
            <param name="defaultTextTitle">The default text title from the Discord channel.</param>
            <param name="emojiTheme">The emoji theme dictionary avaiable for this channel.</param>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.TramontinaChannel.#ctor(System.UInt64,System.String,System.Collections.Generic.Dictionary{KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.EmojiTheme,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.TramontinaChannel"/> class with the specified id, the default channel
            text title and emoji theme.
            </summary>
            <param name="id">The Id from the Discord channel.</param>
            <param name="defaultTextTitle">The default text title from the Discord channel.</param>
            <param name="emojiTheme">The emoji theme dictionary avaiable for this channel.</param>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.TramontinaChannel.DefaultTextTitle">
            <summary>
            The default text title for the tramontina Discord channel.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.TramontinaChannel.EmojiTheme">
            <summary>
            The dictionary containing the EmojiTheme that represents the seasonal theme associate to the emoji, and
            the string that represents the emoji itself for the tramontina Discord channel.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandManager.PrefixTheme.TramontinaChannel.ChangeEmoji(DSharpPlus.CommandsNext.CommandContext,System.String)">
            <summary>
            Change the emoji for current channel. At the current moment, you can do this twice with the same channel
            every 10 minutes.
            </summary>
            <param name="commandContext">The command context of the interaction.</param>
            <param name="emoji">The emoji to be changed in the channel.</param>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommand">
            <summary>
            Represents a single Discord command.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommand.Name">
            <summary>
            Gets or sets the name of the command.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommand.Description">
            <summary>
            Gets or sets the description of the commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommand.Permissions">
            <summary>
            Gets or sets the required permissions for the command.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommand.#ctor(System.String,System.String,KWiJisho.Modules.Commands.Prefix.PrefixCommandGroup,DSharpPlus.Permissions)">
            <summary>
            Initializes a new instance of the <see cref="T:KWiJisho.Modules.Commands.Prefix.PrefixCommand"/> class.
            </summary>
            <param name="name">The name of the command.</param>
            <param name="description">The description of the command.</param>
            <param name="group">The command group to which this command belongs.</param>
            <param name="permission">The required permissions for the command.</param>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandGroup">
            <summary>
            Represents a group and holds a list with a set of Discord commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommandGroup.Name">
            <summary>
            Gets or sets the name of the prefix command group.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Commands.Prefix.PrefixCommandGroup.Commands">
            <summary>
            Gets or sets the list of commands in the prefix command group.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KWiJisho.Modules.Commands.Prefix.PrefixCommandGroup"/> class.
            </summary>
            <param name="name">The name of the command group.</param>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Prefix.PrefixCommandGroup.ToString">
            <inheritdoc/>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Slash.SlashBasic">
            <summary>
            Represents a set of basic slash commands.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Slash.SlashBasic.Emoji">
            <summary>
            Represents a command group to senda random animated emoji.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Slash.SlashBasic.Emoji.SendRandomAnimatedEmoji(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to send a random animated emoji.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Slash.SlashBasic.Emoji.SendRandomAnimatedMemeEmoji(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to send a random animated meme emoji.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Slash.SlashBasic.Emoji.SendRandomAnimatedPartyEmoji(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to send a random animated party emoji.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Slash.SlashBirthday">
            <summary>
            Represents a set of birthday slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Slash.SlashBirthday.GetNextBirthdayAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to show the next person to have birthday.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Slash.SlashBirthday.GetListBirthdayAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to list people will have birthday.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Slash.SlashInfo">
            <summary>
            Represents a set of informational and helpful slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Slash.SlashInfo.GetHelpAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to show help about the Discord bot commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Slash.SlashInfo.GetInfoAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to show information about the bot and the bot owner.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Slash.SlashKwiGpt">
            <summary>
            Represents a set of KWiGpt slash commands. Interaction commands with ChatGpt
            in KWiJisho bot style.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Slash.SlashKwiGpt.ChatGptPromptAsync(DSharpPlus.SlashCommands.InteractionContext,System.String)">
            <summary>
            Represent the command to interact with the bot with ChatGpt in KWiJisho style.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Commands.Slash.SlashNotice">
            <summary>
            Provides methods for "prefix" and "slash" notice commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Commands.Slash.SlashNotice.ChatGptPromptAsync(DSharpPlus.SlashCommands.InteractionContext,System.String,System.String,DSharpPlus.Entities.DiscordAttachment,System.Boolean)">
            <summary>
            Represents the slash command method to send news at the news channel.
            </summary>
            <param name="interactionContext">The interaction context from the command.</param>
            <param name="title">The message title.</param>
            <param name="description">The message description.</param>
            <param name="discordAttachment">The attachment (if present).</param>
            <param name="sendInTramontina">If the message should be sent in Tramontina Discord server or the Personal Test Server.</param>
            <returns></returns>
        </member>
        <member name="T:KWiJisho.Modules.ConfigJson">
            <summary>
            Class that represents the ConfigJson file for configuring the discord bot.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.ConfigJson.KWiJishoToken">
            <summary>
            Gets or sets the API token for KWiJisho.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.ConfigJson.ChatGptToken">
            <summary>
            Gets or sets the API token for ChatGPT.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.ConfigJson.NasaToken">
            <summary>
            Gets or sets the API token for NASA.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.ConfigJson.Prefix">
            <summary>
            Gets or sets the command prefix for the bot.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.ConfigJson.Activity">
            <summary>
            Gets or sets the default bot activity.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.ConfigJson.DefaultColor">
            <summary>
            Gets or sets the default color for bot messages.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.ConfigJson.DeserializeConfigJsonFileAsync">
            <summary>
            Asynchronously deserializes the content of the config.json file into a <see cref="T:KWiJisho.Modules.ConfigJson"/> instance. The <see langword="static"/> properties
            from <see cref="T:KWiJisho.Modules.ConfigJson"/> will receive the values.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation, yielding a <see cref="T:KWiJisho.Modules.ConfigJson"/> instance.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Events.BirthdayJob">
            <summary>
            Represents a Quartz.NET job that executes a birthday message task.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Events.BirthdayJob.Execute(Quartz.IJobExecutionContext)">
            <summary>
            Executes the birthday message task as part of the Quartz.NET job.
            </summary>
            <param name="context">The execution context provided by Quartz.NET.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous execution of the job.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Events.BirthdayJob.GiveBirthdayMessage">
            <summary>
            Sends a birthday message as an asynchronous task.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous execution of the birthday message task.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Events.Scheduler">
            <summary>
            Provides methods for scheduling tasks.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Events.Scheduler.CreateBirthdayScheduler">
            <summary>
            Creates a birthday scheduler as part of the Quartz.NET library.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous creation of the birthday scheduler.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Events.BotStart">
            <summary>
            Provides a set of events and methods fired when bot starts.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Events.BotStart.OnClientReady(System.Object,DSharpPlus.EventArgs.ReadyEventArgs)">
            <summary>
            Handles the events when the bot's client is ready.
            </summary>
            <param name="sender">The object that triggered the events.</param>
            <param name="e">The event arguments containing information about the ready event.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous execution of the event handler.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Events.Buttons">
            <summary>
            Provides a set of events and methods fired when a interaction is made.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Events.Buttons.OnComponentInteractionCreatedAsync(DSharpPlus.DiscordClient,DSharpPlus.EventArgs.ComponentInteractionCreateEventArgs)">
            <summary>
            Handles the event when a component interaction is created, like button clicks.
            </summary>
            <param name="sender">The Discord client instance.</param>
            <param name="e">Event arguments containing information about the component interaction.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="sender"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:KWiJisho.Modules.Events.Buttons.CopyServerNameAsync(DSharpPlus.EventArgs.ComponentInteractionCreateEventArgs)">
            <summary>
            Copies the server name from the interaction's message and puts it into the clipboard.
            Sends a feedback message to the user.
            </summary>
            <param name="e">Event arguments containing information about the component interaction.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Events.GoodbyeWelcome">
            <summary>
            Provides a set of events and methods fired when a user enters and leaves a discord
            server.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Events.GoodbyeWelcome.OnGuildMemberAddedAsync(DSharpPlus.DiscordClient,DSharpPlus.EventArgs.GuildMemberAddEventArgs)">
            <summary>
            Handles the event when a new member joins the Discord server. Sends a welcome message
            with a image and a random string.
            </summary>
            <param name="sender">The discord client instance.</param>
            <param name="e">Event arguments containing information about the guild member.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the assynchronous operation.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Events.GoodbyeWelcome.OnGuildMemberRemovedAsync(DSharpPlus.DiscordClient,DSharpPlus.EventArgs.GuildMemberRemoveEventArgs)">
            <summary>
            Handles the event when a member leaves the Discord server. Sends a goodbye message
            with a image and a random string.
            </summary>
            <param name="sender">The discord client instance.</param>
            <param name="e">Events arguments containing information about the guild member.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the assynchronous operation.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Events.GoodbyeWelcome.GetRandomWelcomeMessage(System.String)">
            <summary>
            Gets a random string welcome message.
            </summary>
            <param name="user">The user that will receive the welcome message.</param>
            <returns>The string containing the welcome message .</returns>
        </member>
        <member name="M:KWiJisho.Modules.Events.GoodbyeWelcome.GetRandomGoodbyeMessage(System.String)">
            <summary>
            Gets a random string goodbye message.
            </summary>
            <param name="user">The user that will receive the welcome message.</param>
            <returns>The string containing the goodbye message .</returns>
        </member>
        <member name="T:KWiJisho.Modules.Events.MessageReceived">
            <summary>
            Provides a set of events and methods for when a message is received.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Utils.Birthday">
            <summary>
            Class that provides a set of utilities for birthday tasks.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.Birthday.GetUsersOrderByClosestBirthday">
            <summary>
            Gets a list of users ordered by how closer are their birthday.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> containing a group of <see cref="T:KWiJisho.Modules.Utils.User"/> and their <see cref="P:KWiJisho.Modules.Utils.User.Birthday"/>.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Utils.Birthday.TryGetDiscordUserByClosestBirthday(DSharpPlus.Entities.DiscordGuild)">
            <summary>
            Tries to get the user if they are presents in current Discord server.
            </summary>
            <param name="discordGuild"></param>
            <returns>Returns the <see cref="T:KWiJisho.Modules.Utils.User"/> if avaiable in current Discord server; otherwise, returns <see langword="null"/>.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Utils.Birthday.GetDaysRemainingByUser(KWiJisho.Modules.Utils.User)">
            <summary>
            Get how many days are remaning for the user's birthday.
            </summary>
            <param name="discordUser">The user to get how many years are remaining for they
            birthday.</param>
            <returns>A <see cref="T:System.Double"/> containing the number of days remaining for they birthday.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Utils.Birthday.UpcomingBirthdayDate">
            <summary>
            Represents options for categorizing upcoming birthday dates.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.Birthday.UpcomingBirthdayDate.Today">
            <summary>
            Indicates an upcoming birthday today.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.Birthday.UpcomingBirthdayDate.Tomorrow">
            <summary>
            Indicates an upcoming birthday tomorrow.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.Birthday.UpcomingBirthdayDate.InSomeDays">
            <summary>
            Indicates an upcoming birthday in the future, beyond tomorrow.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.Birthday.GetUpcomingBirthdayDate(System.Double)">
            <summary>
            Gets the <see cref="T:KWiJisho.Modules.Utils.Birthday.UpcomingBirthdayDate"/> based on how much days are remaining for it.
            </summary>
            <param name="daysRemaning">How many days are remaining for the birthday.</param>
            <returns>The <see cref="T:KWiJisho.Modules.Utils.Birthday.UpcomingBirthdayDate"/> based on how many days are remaning.</returns>
            <exception cref="T:System.NotImplementedException">Thrown if the upcoming birthday date is not yet implemented
            on this current method.</exception>
        </member>
        <member name="M:KWiJisho.Modules.Utils.Birthday.GenerateBirthdayMessage(KWiJisho.Modules.Utils.User)">
            <summary>
            Method responsible for generating a birthday message.
            </summary>
            <param name="discordUser">The user that to get the generated birthday message.</param>
            <returns>A <see cref="T:System.String"/> containing the generated birthday message.</returns>
            <exception cref="T:System.NotImplementedException">Thrown if the upcoming birthday date is not yet implemented on this
            current method.</exception>
        </member>
        <member name="T:KWiJisho.Modules.Utils.Color">
            <summary>
            Represents an RGB color with red, green, and blue components.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.Color.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Represents an RGB color with red, green, and blue components.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.Color.Red">
            <summary>
            Gets or sets the red component of the RGB color.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.Color.Green">
            <summary>
            Gets or sets the green component of the RGB color.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.Color.Blue">
            <summary>
            Gets or sets the blue component of the RGB color.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.Color.DiscordColor">
            <summary>
            Gets a Discord color representation based on the RGB components.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.Color.Hexadecimal">
            <summary>
            Gets a Hexadecimal color representation based on the RGB components.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Utils.Channel">
            <summary>
            The class that represents a new instance of a Discord channel with a
            unique identifier and a default name.
            <param name="id">The Discord channel unique identifier.</param>
            <param name="defaultName">The Discord channel default name.</param>
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.Channel.#ctor(System.UInt64,System.String)">
            <summary>
            The class that represents a new instance of a Discord channel with a
            unique identifier and a default name.
            <param name="id">The Discord channel unique identifier.</param>
            <param name="defaultName">The Discord channel default name.</param>
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.Channel.Id">
            <summary>
            The Discord channel unique identifier.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.Channel.DefaultName">
            <summary>
            The Discord channel default name.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.Channel.UpdateChannelNameAsync(DSharpPlus.CommandsNext.CommandContext,System.String)">
            <summary>
            Updates asynchronously the name of the Discord channel.
            </summary>
            <param name="commandContext">The command context containing information about the command.</param>
            <param name="newName">The new name for the Discord channel.</param>
        </member>
        <member name="T:KWiJisho.Modules.Utils.DiscordEmbedTest">
            <summary>
            Utility class providing default embeds for KWiJisho Discord bot.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Utils.DiscordEmojis">
            <summary>
            Static class that provides class, properties and methods for handling Discord emojis.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Utils.DiscordEmojis.CatMemeEmoji">
            <summary>
            Represents a custom Discord emoji for cat meme emojis, inheriting from the base <see cref="T:KWiJisho.Modules.Utils.Emoji"/> class.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.DiscordEmojis.CatMemeEmoji.#ctor(System.String,System.UInt64)">
            <summary>
            Initializes a new instance of <see cref="T:KWiJisho.Modules.Utils.DiscordEmojis.CatMemeEmoji"/> with its emoji name and Id.
            </summary>
            <param name="name">The <see cref="T:KWiJisho.Modules.Utils.DiscordEmojis.CatMemeEmoji"/> emoji name.</param>
            <param name="id">The <see cref="T:KWiJisho.Modules.Utils.DiscordEmojis.CatMemeEmoji"/> emoji Id.</param>
        </member>
        <member name="T:KWiJisho.Modules.Utils.DiscordEmojis.CatPartyEmoji">
            <summary>
            Represents a custom Discord emoji for cat party emojis, inheriting from the base <see cref="T:KWiJisho.Modules.Utils.Emoji"/> class.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.DiscordEmojis.CatPartyEmoji.#ctor(System.String,System.UInt64)">
            <summary>
            Initializes a new instance of <see cref="T:KWiJisho.Modules.Utils.DiscordEmojis.CatPartyEmoji"/> with its emoji name and Id.
            </summary>
            <param name="name">The <see cref="T:KWiJisho.Modules.Utils.DiscordEmojis.CatPartyEmoji"/> emoji name.</param>
            <param name="id">The <see cref="T:KWiJisho.Modules.Utils.DiscordEmojis.CatPartyEmoji"/> emoji Id.</param>
        </member>
        <member name="T:KWiJisho.Modules.Utils.Emoji">
            <summary>
            Class responsible for creating and handling custom Discord emojis.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.Emoji.Name">
            <summary>
            The discord emoji name.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.Emoji.Id">
            <summary>
            The discord emoji unique identifier.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.Emoji.Code">
            <summary>
            The discord emoji code responsible for outputing it into the chat.
            <c>&lt;a:{name}:{id}&gt;</c>
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.Emoji.#ctor(System.String,System.UInt64)">
            <summary>
            Initializes a new instance of <see cref="T:KWiJisho.Modules.Utils.Emoji"/> class with the specified
            name and identifier.
            </summary>
            <param name="name">The name of the Discord emoji.</param>
            <param name="id">The unique identifier of the Discord emoji.</param>
        </member>
        <member name="M:KWiJisho.Modules.Utils.Emoji.ToString">
            <summary>
            Converts the Discord emoji to its string representation, which is the Discord emoji code.
            </summary>
            <returns>The Discord emoji code in the format "<c>&lt;a:{<see cref="P:KWiJisho.Modules.Utils.Emoji.Name"/>}:{<see cref="P:KWiJisho.Modules.Utils.Emoji.Id"/>}&gt;</c>".</returns>
        </member>
        <member name="T:KWiJisho.Modules.Utils.DiscordFormat">
            <summary>
            Provides utility extension methods for formatting text with Discord markdown.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.DiscordFormat.ToDiscordBold(System.String)">
            <summary>
            Formats the specified string in bold using Discord markdown.
            </summary>
            <param name="str">The string to be formatted.</param>
            <returns>The string in bold.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Utils.DiscordFormat.ToDiscordItalic(System.String)">
            <summary>
            Formats the specified string in italic using Discord markdown.
            </summary>
            <param name="str">The string to be formatted.</param>
            <returns>The string in italic.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Utils.DiscordFormat.ToDiscordEscape(System.String)">
            <summary>
            Formats the specified string to be escaped using Discord markdown.
            </summary>
            <param name="str">The string to be formatted.</param>
            <returns>The escaped string.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Utils.DiscordUsers">
            <summary>
            Provides a static class for managing Discord users along with their identifiers.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.DiscordUsers.Users">
            <summary>
            The list of users along with their identifiers.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Utils.User">
            <summary>
            Represents a Discord user along with their identifier and additional information.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.User.#ctor(System.UInt64,System.DateTime,System.String)">
            <summary>
            Represents a Discord user along with their identifier and additional information.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.User.Id">
            <summary>
            The unique identifier of the user.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.User.Born">
            <summary>
            The date when the user was born.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.User.Identifier">
            <summary>
            The custom identifier or nickname associated with the user.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.User.Birthday">
            <summary>
            Gets or sets the user's birthday (if applicable).
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.User.GetUserDiscordMember(DSharpPlus.Entities.DiscordGuild)">
            <summary>
            Tries to return a <see cref="T:DSharpPlus.Entities.DiscordMember"/> representing the user in the specified server.
            If the user is not found, returns <see langword="null"/>. 
            </summary>
            <param name="discordGuild">The Discord guild where the user is expected to be a member.</param>
            <returns>Returns <see cref="T:DSharpPlus.Entities.DiscordMember"/> if found; otherwise, returns <see langword="null"/>.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Utils.KWiJishoInfo">
            <summary>
            Class that provides static basic information about KWiJisho bot.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.KWiJishoInfo.Name">
            <summary>
            KWiJisho project name gotten directly from <see cref="T:System.Reflection.Assembly"/>.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.KWiJishoInfo.Created">
            <summary>
            The date Karen Kujo project was first commit on <a href="https://github.com/monambike/kwijisho-discord-bot">GitHub repository</a>.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.KWiJishoInfo.KarenKujoBirthday">
            <summary>
            Gets the calculated birthday for Karen Kujo. Karen Kujo was born on December 1st,
            and the age is fixed at 15 years.
            The property provides the current date with the year adjusted to maintain the age of 15.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Utils.KWiJishoLog">
            <summary>
            Provides methods for handling the application log for important tasks.
            </summary>
        </member>
        <member name="P:KWiJisho.Modules.Utils.KWiJishoLog.Path">
            <summary>
            The log file path.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Utils.KWiJishoLog.LogType">
            <summary>
            Represents options for the application log type.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.KWiJishoLog.LogType.Debug">
            <summary>
            Indicated a debug level log.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.KWiJishoLog.LogType.Info">
            <summary>
            Indicated a info level log.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.KWiJishoLog.LogType.Warning">
            <summary>
            Indicated a warning level log.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.KWiJishoLog.LogType.Error">
            <summary>
            Indicated a error level log.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.KWiJishoLog.LogType.Fatal">
            <summary>
            Indicated a fatal level log.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.KWiJishoLog.AddDebug(System.String)">
            <summary>
            Adds a debug log entry with the specified message.
            </summary>
            <param name="message">The debug log message.</param>
        </member>
        <member name="M:KWiJisho.Modules.Utils.KWiJishoLog.AddInfo(System.String)">
            <summary>
            Adds a info log entry with the specified message.
            </summary>
            <param name="message">The info log message.</param>
        </member>
        <member name="M:KWiJisho.Modules.Utils.KWiJishoLog.AddWarning(System.String)">
            <summary>
            Adds a warning log entry with the specified message.
            </summary>
            <param name="message">The warning log message.</param>
        </member>
        <member name="M:KWiJisho.Modules.Utils.KWiJishoLog.AddError(System.String)">
            <summary>
            Adds a error log entry with the specified message.
            </summary>
            <param name="message">The error log message.</param>
        </member>
        <member name="M:KWiJisho.Modules.Utils.KWiJishoLog.AddFatal(System.String)">
            <summary>
            Adds a fatal log entry with the specified message.
            </summary>
            <param name="message">The fatal log message.</param>
        </member>
        <member name="M:KWiJisho.Modules.Utils.KWiJishoLog.Add(KWiJisho.Modules.Utils.KWiJishoLog.LogType,System.String)">
            <summary>
            Adds a formatted log entry to the log file.
            </summary>
            <param name="logType">The type of log entry.</param>
            <param name="message">The log message to be added.</param>
        </member>
        <member name="M:KWiJisho.Modules.Utils.KWiJishoLog.AddLineToFile(System.String)">
            <summary>
            Adds a line to the log file with the specified content.
            </summary>
            <param name="line">The line to be added to the log file.</param>
        </member>
        <member name="T:KWiJisho.Modules.Utils.KWiJishoPermission">
            <summary>
            Provides utility methods for handling permissions in the KWiJisho application.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.KWiJishoPermission.PermissionCustomErrorMessage(DSharpPlus.Permissions)">
            <summary>
            Generates a custom error message for a permission check failure.
            </summary>
            <param name="permission">The required permission.</param>
            <returns>A formatted error message indicating the required permission.</returns>
        </member>
        <member name="M:KWiJisho.Modules.Utils.KWiJishoPermission.GetPermissionNameInPortuguese(DSharpPlus.Permissions)">
            <summary>
            Gets the Portuguese name of a Discord permission.
            </summary>
            <param name="permission">The Discord permission.</param>
            <returns>The Portuguese name of the permission.</returns>
        </member>
        <member name="T:KWiJisho.Modules.Utils.ServerPersonal">
            <summary>
            Static class responsible for holding information about my personal testing Discord server.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.ServerPersonal.GuildId">
            <summary>
            Personal Discord server guild Id.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.ServerPersonal.KWiJishoChannelId">
            <summary>
            Personal KWiJisho Discord server channel Id.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Utils.ServerTramontina">
            <summary>
            Static class responsible for holding information about Tramontina Discord server.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.ServerTramontina.GuildId">
            <summary>
            Tramontina Discord server guild Id.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.ServerTramontina.WelcomeChannelId">
            <summary>
            Tramontina welcome Discord server channeld Id.
            </summary>
        </member>
        <member name="F:KWiJisho.Modules.Utils.ServerTramontina.NewsChannelId">
            <summary>
            Tramontina news Discord server channel Id.
            </summary>
        </member>
        <member name="T:KWiJisho.Modules.Utils.UtilList">
            <summary>
            Provides utility methods for working with lists.
            </summary>
        </member>
        <member name="M:KWiJisho.Modules.Utils.UtilList.GetRandomValueFromList``1(System.Collections.Generic.List{``0})">
            <summary>
            Returns a random value from a given list.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
            <param name="list">The list from which to retrieve a random value.</param>
            <returns>A random value from the list.</returns>
        </member>
        <member name="T:KWiJisho.Program">
            <summary>
            The main entry point class of the application.
            </summary>
        </member>
        <member name="M:KWiJisho.Program.Main">
            <summary>
            The main entry point method of the application.
            </summary>
        </member>
    </members>
</doc>
